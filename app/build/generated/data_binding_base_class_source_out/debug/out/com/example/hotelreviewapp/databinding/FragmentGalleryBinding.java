// Generated by view binder compiler. Do not edit!
package com.example.hotelreviewapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RatingBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hotelreviewapp.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGalleryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatEditText description;

  @NonNull
  public final ImageView hotelImage;

  @NonNull
  public final AppCompatEditText location;

  @NonNull
  public final AppCompatEditText name;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final MaterialButton saveButton;

  @NonNull
  public final MaterialButton selectLocationButton;

  private FragmentGalleryBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatEditText description, @NonNull ImageView hotelImage,
      @NonNull AppCompatEditText location, @NonNull AppCompatEditText name,
      @NonNull RatingBar ratingBar, @NonNull MaterialButton saveButton,
      @NonNull MaterialButton selectLocationButton) {
    this.rootView = rootView;
    this.description = description;
    this.hotelImage = hotelImage;
    this.location = location;
    this.name = name;
    this.ratingBar = ratingBar;
    this.saveButton = saveButton;
    this.selectLocationButton = selectLocationButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGalleryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGalleryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_gallery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGalleryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.description;
      AppCompatEditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.hotel_image;
      ImageView hotelImage = ViewBindings.findChildViewById(rootView, id);
      if (hotelImage == null) {
        break missingId;
      }

      id = R.id.location;
      AppCompatEditText location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.name;
      AppCompatEditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.rating_bar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.save_button;
      MaterialButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.select_location_button;
      MaterialButton selectLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (selectLocationButton == null) {
        break missingId;
      }

      return new FragmentGalleryBinding((ConstraintLayout) rootView, description, hotelImage,
          location, name, ratingBar, saveButton, selectLocationButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
